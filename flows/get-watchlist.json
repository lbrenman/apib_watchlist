{
	"schemaVersion": "4",
	"info": {
		"name": "get-watchlist"
	},
	"parameter": {
		"properties": {
			"request": {
				"description": "The request"
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false
	},
	"start": "javascript.2",
	"nodes": {
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "400",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "string",
					"value": "\"\\\"Error\\\"\"",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"invoke-flow.1": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow",
			"name": "getStockQuotes",
			"method": "invokeFlowForEach",
			"parameters": [
				{
					"name": "id",
					"type": "string",
					"value": "\"getquote\"",
					"metaName": "Flow Listener ID",
					"metaDescription": "The ID of a previously configured `Flow Listener`."
				},
				{
					"name": "items",
					"type": "jsonpath",
					"value": "$.result",
					"metaName": "Items",
					"metaDescription": "An array of input items where each item will be passed as request data when invoking the flow."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"javascript.1"
					],
					"context": "$.response",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Invoke Flow (for-each)"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "filerResponse",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let reply = [];\\n  data.response.forEach(function(item){\\n    if(item){\\n      reply.push(item);\\n    }\\n  });\\n  \\n  return(reply);\""
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"http.2"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"http.2": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.result",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"javascript.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Convert Query Parameters",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"return data.request.query.stocklist.split(',');\""
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"invoke-flow.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		}
	}
}